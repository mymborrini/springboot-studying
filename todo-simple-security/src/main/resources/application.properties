# JPA
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true

# REST API this one tells the rest controller that uses the 
# /api as the root to expose all the REST API endpoints. So if we want to get to
# ToDo's we need to access the endpoint at http://localhost:8080/api/toDos
spring.data.rest.base-path=/api

# SPRING SECURITY Here is the simplest way the other one is to extend
# WebSecurityConfigurerAdapter
# spring.security.user.name=apress
# spring.security.user.password=springboot2
#Â spring.security.user.roles=ADMIN,USER

#spring.mustache.expose-request-attributes=true

todo.authentication.find-by-email-uri=http://localhost:8181/persons/search/findByEmailIgnoreCase
todo.authentication.username=admin@example.com
todo.authentication.password=admin


spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.data=classpath:data.sql
spring.datasource.initialization-mode=always